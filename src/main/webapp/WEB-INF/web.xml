<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" 
	xmlns="http://java.sun.com/xml/ns/javaee" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
	http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">
  <!-- 配置Spring监听器 -->
  
  <listener>
  	<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
  
  <!-- 指定加载Spring的核心配置文件 -->
 	
	  <context-param>
	  <param-name>contextConfigLocation</param-name>
	  <!-- 注意applicationContext*.xml 的含义 -->
	  <param-value>classpath:spring/applicationContext*.xml</param-value>
	  </context-param>
	  
	
  <!-- 编码过滤器，以UTF8编码 -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF8</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
  
	
  
  <!-- 配置SpringMVC核心入口类 -->
	<servlet>
	<servlet-name>smvc</servlet-name>
	<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
	
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:spring/springmvc-config.xml</param-value>
		</init-param>
		<!-- 如果想让servlet随容器启动而启动，可以用load-on-starup来配置
		如果是0，或0以上的数字，表示随容器启动而启动的。
		如果不配置，或者是负数，表示第一次被调用的时候工作的 -->
		<load-on-startup>1</load-on-startup>
	</servlet>

	<servlet-mapping>
		<servlet-name>smvc</servlet-name>
		<!-- 表示拦截处理所有请求 
			如果配置/  静态文件都会被被拦截   比如  .css .js jpg 等  这是个坑
			所以在spring-config中配置  <mvc:default-servlet-handler/>
		-->
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	
	<welcome-file-list>
	<welcome-file>login.jsp</welcome-file>
	</welcome-file-list>
	
</web-app>
